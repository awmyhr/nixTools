# -*- coding: utf-8 -*-
# pylint: disable=invalid-name
"""
nixTools documentation build configuration file
"""

import os
import sys
import yaml
sys.path.insert(0, os.path.abspath('.pylink'))

#===============================================================================
#-- Project Information
document_title = u'nixTools Documentation'
document_description = u'All the UNIXy things without a home.'
project_info = {}
for key, value in yaml.load(open('../.newfilerc', 'r')).iteritems():
    project_info[key] = value
project = '%s' % (project_info['project_name'])
copyright = '%s' % (project_info['software_copyright']) #: pylint: disable=redefined-builtin
author = '%s <%s>' % (project_info['contact_name'], project_info['contact_email'])
#-- Version info for the project. Acts as replacement for |version| & |release|
#-- Also used in various other places throughout the built documents.
version = '%s' % (project_info['project_version'].split('-'))
release = '%s' % (project_info['project_version'])

#===============================================================================
#-- General configuration
# needs_sphinx = '1.0'           #: If you need a minimal Sphinx version
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.viewcode',
    'sphinx.ext.napoleon',
    'sphinxcontrib.programoutput',
]
templates_path = ['_templates'] #: Relative to current directory.
source_suffix = ['.rst']        #: The suffix(es) of source filenames.
master_doc = 'index'            #: The master toctree document.
language = None                 #: The language for autogenerated content.
exclude_patterns = [            #: Ignore these directories when looking for source files.
    '_build',
    'Thumbs.db',
    '.DS_Store'
]
pygments_style = 'sphinx'       #: The name of the Pygments style to use.
# default_role = None            #: Default reST role to use for all documents
# show_authors = False           #: True  = Show sectionauthor and moduleauthor directives.
# keep_warnings = False          #: True  = Keep warnings as "system message" paragraphs.
todo_include_todos = True       #: True  = `todo` and `todoList` produce output.
#-- There are two options for replacing |today|:
#--     Hardcode today to some non-false value, then it is used:
# today = ''
#--     strftime is used with format set in today_fmt:
# today_fmt = '%B %d, %Y'
#-- Default configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {'https://docs.python.org/': None}

#===============================================================================
#-- Options for HTML output
# import solar_theme
# html_theme = 'solar_theme'          #: Theme to use for HTML and HTML Help pages.
# html_theme_path = [solar_theme.theme_path] #: Any paths needed for custom themes.
# html_theme_options = {}        #: Theme-specific cusotmizations (see theme doc).
html_theme = 'classic'
html_title = '%s v%s' % (project_info['project_name'], project_info['project_version'])
                                #: Name for this set of Sphinx documents.
html_short_title = '%s' % (project_info['project_name'])
                                #: Shorter title for the navbar (default=html_title).
# html_logo = None               #: Image file placed at top of sidebar.
# html_favicon = None            #: Image file used as favicon (16x16 or 32x32 .ico)
html_static_path = ['_static']  #: Custom static files here (will overwrite builtins).
# html_extra_path = []           #: Any extra paths for custom files to be copied to root of doc.
# html_last_updated_fmt = None   #: If set, 'Last updated on:' timestamp is put
                                #: in every footer, using strftime format.
                                #: Empty string = '%b %d, %Y'
# html_use_smartypants = True    #: Convert quotes and dashes to typographically correct entities.
# html_sidebars = {               #: Sidebar templates (docNames => templateNames).
#    '**': [
#        'localtoc.html',
#        'relations.html',
#        'more.html',
#        'searchbox.html'
#    ]
# }
# html_additional_pages = {}     #: Extra templates rendered to pages (pageNames => templateNames).
# html_domain_indices = True     #: False = no module index is generated.
# html_use_index = True          #: False = no index is generated.
# html_split_index = False       #: True  = index split into individual pages for each letter.
# html_show_sourcelink = True    #: True  = links to reST sources are added to pages.
# html_show_sphinx = True        #: True  = "Created using Sphinx" shown in HTML footer.
# html_show_copyright = True     #: True  = "(C) Copyright ..." shown in HTML footer.
# html_use_opensearch = ''       #: True  = OpenSearch description file created.
                                #: All pages will contain <link> tag referring to it.
                                #: Value must be base URL from which HTML is served.
# html_file_suffix = None        #: Suffix for HTML files.
# html_search_language = 'en'    #: Lang used to generate HTML search index.
# html_search_options = {'type': 'default'} #: Options for search lang support.
# html_search_scorer = 'scorer.js' #: JavaScript file which implements search scorer.
htmlhelp_basename = '%sdoc' % (project_info['project_abbr'])
                                #: Output file base name for HTML help builder.

#===============================================================================
#-- Options for LaTeX output
latex_elements = {
    # 'papersize': 'letterpaper',#: The paper size ('letterpaper' or 'a4paper').
    # 'pointsize': '10pt',       #: The font size ('10pt', '11pt' or '12pt').
    # 'preamble': '',            #: Additional stuff for the LaTeX preamble.
    # 'figure_align': 'htbp',    #: Latex figure (float) alignment
}
latex_documents = [             #: Grouping doc tree into LaTeX files. List of tuples
                                #: (source start file, target name, title,
                                #:  author, docclass [howto|manual|own class]).
    (master_doc, '%s.tex' % (project_info['project_abbr'].replace('_', '\\_')),
     document_title.replace('_', '\\_'),
     author.replace('_', '\\_'), 'manual'),
]
# latex_logo = None              #: Image file placed at top of title page.
# latex_use_parts = False        #: (True && docclass='manual') =
                                #: toplevel headings are parts instead of chapters.
# latex_show_pagerefs = False    #: True  = show page references after internal links.
# latex_show_urls = False        #: True  = show URL addresses after external links.
# latex_appendices = []          #: Documents to append as an appendix to all manuals.
# latex_domain_indices = True    #: False = no module index is generated.

#===============================================================================
#-- Options for manual page output
man_pages = [                   #: One entry per manual page. List of tuples
                                #: (source start file, name, description,
                                #:  authors, manual section).
    (master_doc, project_info['project_abbr'], document_title,
     [author], 1)
]
# man_show_urls = False          #: True  = show URL addresses after external links.

#===============================================================================
#-- Options for Texinfo output
texinfo_documents = [           #: Grouping doc tree into Texinfo files. List of tuples
                                #: (source start file, target name, title, author,
                                #:  dir menu entry, description, category)
    (master_doc, project_info['project_abbr'], document_title, author,
     project_info['project_abbr'], document_description, 'Miscellaneous'),
]
# texinfo_appendices = []        #: Documents to append as an appendix to all manuals.
# texinfo_domain_indices = True  #: False = no module index is generated.
# texinfo_show_urls = 'footnote' #: Display URL address as: [footnote|no|inline].
# texinfo_no_detailmenu = False  #: True  = do not generate @detailmenu in "Top" node's menu.
